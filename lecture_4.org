#+STARTUP: overview
#+latex_class_options: [14pt]

* DONE Group Order
:PROPERTIES:
:ID:       97c172ec-93ae-487c-902c-32491b36a6f0
:END:

A group is called a *finite group* if the underlying set of elements is finite.
In that case, the number of elements of that group is called its order:

Let $\mathbb{G}$ be a finite group. We write $ord(\mathbb{G})$ or $|\mathbb{G}|$ for the order of $\mathbb{G}$.

See also [[id:c57bb4a8-fba2-4d46-8e8c-6438438ca1eb][Field Characteristic]]

** DONE Example: $\mathbb{Z}_{6},+$

This is the [[id:770696d2-1294-4e86-ac3c-6803f9053537][Remainder Class]] group, also called the *additive group of integers modulo 6*.

#+BEGIN_SRC sage :session . :exports both
q=6
G6 = AdditiveAbelianGroup([q])

print(f"Elements of {G6}:")
[x for x in G6]
print(f"Order of {G6}: {G6.order()}")
print(f"{G6([2])} + {G6([5])} = {G6([2]) + G6([5])}")

# same as
Z6 = Zmod(q)
elems = [x for x in Z6]
print(f"Order of {Z6} {elems}: {Z6.order()}")
#+END_SRC

#+RESULTS:
: Elements of Additive abelian group isomorphic to Z/6:
: [(0), (1), (2), (3), (4), (5)]
: Order of Additive abelian group isomorphic to Z/6: 6
: (2) + (5) = (1)
: Order of Ring of integers modulo 6 [0, 1, 2, 3, 4, 5]: 6

** DONE Example: $\mathbb{Z}_{5},*$

#+BEGIN_SRC sage :session . :exports both
q=5
#G1 = AdditiveAbelianGroup([q])

Z5 = Zmod(q)
G5 = Z5.unit_group() # multiplicative group mod 7
G5

print(f"Elements of {G5}:")
[x for x in G5]
print(f"Order of {G5}: {G5.order()}")
#+END_SRC

#+RESULTS:
: Multiplicative Abelian group isomorphic to C4
: Elements of Multiplicative Abelian group isomorphic to C4:
: [1, f, f^2, f^3]
: Order of Multiplicative Abelian group isomorphic to C4: 4

* DONE Cyclic Groups
See [[id:f5f80632-6c31-4065-9470-33d7ea93c025][Cyclic groups]]
* TODO Euler's totient function
- Number of groups generators
* IN-PROGRESS Exponential map
- scalar field

=Definition=

When $\mathbb{G}$ is a [[id:f5f80632-6c31-4065-9470-33d7ea93c025][Cyclic group]] of [[id:97c172ec-93ae-487c-902c-32491b36a6f0][order]] $n$

* IN-PROGRESS [#A] NOTES
- reducing group operations to mod p-1 additon using generator
  - map numbers (labels) with points in the group
- homomorphism
- bn128

#+BEGIN_SRC sage :session . :exports both
  q=5
  Z = Zmod(q)
  G = Z.unit_group() # multiplicative group mod 7
  G
  G.inject_variables()

  [x for x in G]

  for x in G:
    elem = Z(x)
    generates = set()
    for i in range(1,q):
      generates.add(elem^i)
    print(f"element {elem} generates {generates}")
    # if len(generates) == G.order():
    #   primitive_roots.append(elem)
#+END_SRC

#+RESULTS:
: Multiplicative Abelian group isomorphic to C4
: Defining f
: [1, f, f^2, f^3]
: element 1 generates {1}
: element 2 generates {1, 2, 3, 4}
: element 4 generates {1, 4}
: element 3 generates {1, 2, 3, 4}

#+BEGIN_SRC sage :session . :exports both
  F = GF(21888242871839275222246405745257275088696311157297823662689037894645226208583)
  E = EllipticCurve(F,[0,3])

  G = E(1,2)

  P2 = G+G
  P2

  P3 = P2+G

  3*G == P3

  5*G == G+G+G+G+G

  min_G = G * ( E.order() - 1)
  min_G == -1*G

  # x - y = 3
  # e.g. x = 7 y = 4

  F.order()
  E.order()

  # 1/2G + 1/2G


#+END_SRC

#+RESULTS:
: (1368015179489954701390400359078579693043519447331113978918064868415326638035 : 9918110051302171585080402603319702774565515993150576347155970296011118125764 : 1)
: True
: True
: True
: 21888242871839275222246405745257275088696311157297823662689037894645226208583
: 21888242871839275222246405745257275088548364400416034343698204186575808495617
