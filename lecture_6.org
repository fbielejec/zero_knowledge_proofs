* NOTES
- pairings
- pairing groups
- order of the pairing groups
- pairings in Solidity (precompile)

#+BEGIN_SRC sage  :session . :exports both
import py_ecc.bn128 as bn128
from py_ecc.fields import (
    bn128_FQ as FQ,
    bn128_FQ2 as FQ2,
    #bn128_FQ6 as FQ6,
    bn128_FQ12 as FQ12
)

p=21888242871839275222246405745257275088696311157297823662689037894645226208583
Fp=GF(p)
E = EllipticCurve(Fp, [0,3])
G1 = E(1,2)
k = 2
Rx.<x>=Fp[]
Fp2 = GF(p^k, name='i', modulus=x^k + 1)

# https://eips.ethereum.org/EIPS/eip-197#:~:text=q%20%3D%2021888242871839275222246405745257275088548364400416034343698204186575808495617.-,Definition%20of%20the%20groups,-The%20groups%20G_1
a=0
TwistB=3*Fp2([9,1])^(-1) # 3/(i+9)
E2 = EllipticCurve(Fp2, [a,TwistB])

# [a,b] -> a + i*b
x_G2 = Fp2([
  10857046999023057135944570762232829481370756359578518086990519993285655852781,
  11559732032986387107991004021392285783925812861821192530917403151452391805634
])

y_G2 = Fp2([
  8495653923123431417604973247489272438418190587263600148770280649306958101930,
  4082367875863433681332203403145435568316851327593401208105741076214120093531
])

G2 = E2(x_G2, y_G2)

# G2 is of the same order as G1
n=G1.order()
assert(n*G2 == E2(0))

# Show the generators
#G1, G2

# computes e(Q \in G2, P \in G1)
def pairing(P,Q):
  ePQ = bn128.pairing( (bn128.FQ2([int(Q[0][0]), int(Q[0][1])]),
                        bn128.FQ2([int(Q[1][0]), int(Q[1][1])])),
                       (bn128.FQ(int(P[0])), bn128.FQ(int(P[1]))) );
  # returns an element in FQ12 (extension tower Fp^2 -> Fp^6 -> Fp12)
  return ePQ

# proof : a*b = c
a=3; b=4; c=12;
a*b == c
aG1 = a * G1
bG2 = b * G2
cG1 = 12 * G1

pairing(aG1,bG2) == pairing(cG1, G2)

# proof : a*b + c*d = 24
a=2;b=3;c=2;d=9
a*b + c*d == 24

pairing(b*G1,a*G2)*pairing(d*G1,c*G2)==pairing(G1,24*G2)

# or
g=pairing(G1,G2)
# this is the neutral element of target group FP12 ( G_T)
assert(g^0==FQ12.one())
pairing(b*G1,a*G2) * pairing(d*G1,c*G2) == g**24

# proof: xyz = 24
x=1; y=3; z=8; w=3
x * y == w
w * z == 24

X1=x*G1
Y2=y*G2
W1=(x*y)*G1
W2=(x*y)*G2
Z2=z*G2

# -------------------------------------------------------------------------- to prove that w is the same (on both curves)
pairing(X1,Y2) == pairing(W1,G2) and pairing(W1,Z2) == pairing(G1,24*G2) and pairing(W1,G2) == pairing(G1,W2)

# proof:
# xy + z = 10
# y + z =7
x=2;y=3;z=4;
x*y + z == 10
y+z == 7

X1=x*G1
Y1=y*G1
Y2=y*G2
Z1=z*G1

# no need for a pairing to prove the second equation, I can use the additive homomomorphism ([y]G1 + [z]G1 == [y+z]G1)
pairing(X1,Y2) * pairing(Z1,G2) == pairing(G1, 10*G2) and Y1+Z1==(y+z)*G1
#+END_SRC

#+RESULTS:
#+begin_example
True
True
True
True
True
True
True
True
True
True
True
#+end_example
